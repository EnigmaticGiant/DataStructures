BST:
0: 12(12)X
1: 0(12)L 83(12)R
2: 8(0)R 45(83)L 107(83)R
3: 7(8)L 9(8)R 41(45)L 63(45)R 100(107)L 108(107)R
4: 6(7)L 11(9)R 39(41)L 44(41)R 47(63)L 75(63)R 92(100)L 103(100)R 109(108)R
5: =5(6)L =10(11)L 35(39)L =40(39)R =42(44)L 57(47)R 66(75)L 80(75)R 84(92)L 95(92)R =102(103)L 104(103)R =110(109)R
6: 21(35)L =36(35)R 54(57)L 59(57)R =64(66)L 73(66)R 76(80)L =81(80)R 91(84)R =93(95)L 98(95)R =106(104)R
7: 13(21)L 30(21)R 53(54)L =55(54)R =58(59)L 62(59)R 69(73)L =78(76)R 85(91)L =96(98)L
8: 14(13)R 24(30)L =33(30)R =49(53)L =61(62)L 70(69)R 89(85)R
9: 20(14)R =22(24)L =27(24)R =71(70)R 88(89)L =90(89)R
10: 17(20)L 87(88)L
11: =19(17)R =86(87)L
debug (in-order): [[0 [[[[5] 6] 7] 8 [9 [[10] 11]]]] 12 [[[[[[[13 [14 [[17 [19]] 20]]] 21 [[[22] 24 [27]] 30 [33]]] 35 [36]] 39 [40]] 41 [[42] 44]] 45 [[47 [[[[49] 53] 54 [55]] 57 [[58] 59 [[61] 62]]]] 63 [[[64] 66 [[69 [70 [71]]] 73]] 75 [[76 [78]] 80 [81]]]]] 83 [[[[84 [[85 [[[[86] 87] 88] 89 [90]]] 91]] 92 [[93] 95 [[96] 98]]] 100 [[102] 103 [104 [106]]]] 107 [108 [109 [110]]]]]]
debug (pre-order): [12 [0 [8 [7 [6 [5]]] [9 [11 [10]]]]] [83 [45 [41 [39 [35 [21 [13 [14 [20 [17 [19]]]]] [30 [24 [22] [27]] [33]]] [36]] [40]] [44 [42]]] [63 [47 [57 [54 [53 [49]] [55]] [59 [58] [62 [61]]]]] [75 [66 [64] [73 [69 [70 [71]]]]] [80 [76 [78]] [81]]]]] [107 [100 [92 [84 [91 [85 [89 [88 [87 [86]]] [90]]]]] [95 [93] [98 [96]]]] [103 [102] [104 [106]]]] [108 [109 [110]]]]]]
debug (post-order): [[[[[[5] 6] 7] [[[10] 11] 9] 8] 0] [[[[[[[[[[[19] 17] 20] 14] 13] [[[22] [27] 24] [33] 30] 21] [36] 35] [40] 39] [[42] 44] 41] [[[[[[49] 53] [55] 54] [[58] [[61] 62] 59] 57] 47] [[[64] [[[[71] 70] 69] 73] 66] [[[78] 76] [81] 80] 75] 63] 45] [[[[[[[[[[86] 87] 88] [90] 89] 85] 91] 84] [[93] [[96] 98] 95] 92] [[102] [[106] 104] 103] 100] [[[110] 109] 108] 107] 83] 12]
size is 73
BST:
0: 12(12)X
1: 0(12)L 83(12)R
2: 8(0)R 41(83)L 107(83)R
3: =11(8)R 40(41)L 59(41)R 98(107)L =108(107)R
4: 36(40)L =58(59)L 75(59)R 92(98)L =102(98)R
5: 35(36)L 70(75)L 80(75)R 84(92)L =93(92)R
6: 19(35)L =73(70)R =81(80)R 88(84)R
7: =13(19)L 27(19)R 85(88)L
8: 24(27)L =33(27)R =86(85)R
9: =22(24)L
debug (in-order): [[0 [8 [11]]] 12 [[[[[[[13] 19 [[[22] 24] 27 [33]]] 35] 36] 40] 41 [[58] 59 [[70 [73]] 75 [80 [81]]]]] 83 [[[[84 [[85 [86]] 88]] 92 [93]] 98 [102]] 107 [108]]]]
debug (pre-order): [12 [0 [8 [11]]] [83 [41 [40 [36 [35 [19 [13] [27 [24 [22]] [33]]]]]] [59 [58] [75 [70 [73]] [80 [81]]]]] [107 [98 [92 [84 [88 [85 [86]]]] [93]] [102]] [108]]]]
debug (post-order): [[[[11] 8] 0] [[[[[[[13] [[[22] 24] [33] 27] 19] 35] 36] 40] [[58] [[[73] 70] [[81] 80] 75] 59] 41] [[[[[[[86] 85] 88] 84] [93] 92] [102] 98] [108] 107] 83] 12]
size is 32
Nodes: 32
Minimum depth: 1
Maximum depth: 9
